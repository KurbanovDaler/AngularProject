{"version":3,"file":"message.js","sourceRoot":"","sources":["../../../../src/collections/message/components/message.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,KAAK,EAAE,MAAM,EAAE,YAAY,EAAE,MAAM,eAAe,CAAC;AACvE,OAAO,EAAE,oBAAoB,EAAE,UAAU,EAAE,mBAAmB,EAAE,MAAM,mCAAmC,CAAC;;IAyCtG;QACI,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;QAC1B,IAAI,CAAC,SAAS,GAAG,IAAI,YAAY,EAAc,CAAC;QAEhD,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;QAEzB,IAAI,CAAC,oBAAoB,GAAG,IAAI,oBAAoB,EAAE,CAAC;QACvD,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC;QACzB,IAAI,CAAC,kBAAkB,GAAG,GAAG,CAAC;QAE9B,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;KACnB;IAEM,4BAAO,GAAd;QAAA,iBAKC;QAJG,IAAI,CAAC,oBAAoB,CAAC,OAAO,CAAC,IAAI,UAAU,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,kBAAkB,EAAE,mBAAmB,CAAC,GAAG,EAAE;YAChH,KAAI,CAAC,WAAW,GAAG,IAAI,CAAC;YACxB,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC;SAC7B,CAAC,CAAC,CAAC;KACP;;gBArDJ,SAAS,SAAC;oBACP,QAAQ,EAAE,aAAa;oBACvB,QAAQ,EAAE,mOAKb;oBACG,MAAM,EAAE,CAAC,yFAKZ,CAAC;iBACD;;;;;kCAEI,KAAK;8BAGL,MAAM,SAAC,SAAS;+BAOhB,KAAK;uCAGL,KAAK;0BAGL,KAAK,SAAC,OAAO;;qBAvClB;;SAsBa,UAAU","sourcesContent":["import { Component, Input, Output, EventEmitter } from \"@angular/core\";\r\nimport { TransitionController, Transition, TransitionDirection } from \"../../../modules/transition/index\";\r\n\r\nexport interface IMessage {\r\n    dismiss():void;\r\n}\r\n\r\n@Component({\r\n    selector: \"sui-message\",\r\n    template: `\r\n<div class=\"ui message {{ class }}\" *ngIf=\"!isDismissed\" [suiTransition]=\"transitionController\">\r\n    <i class=\"close icon\" *ngIf=\"isDismissable\" (click)=\"dismiss()\"></i>\r\n    <ng-content></ng-content>\r\n</div>\r\n`,\r\n    styles: [`\r\n/* Fix for CSS Bug */\r\n.ui.icon.visible.message {\r\n    display: flex !important;\r\n}\r\n`]\r\n})\r\nexport class SuiMessage implements IMessage {\r\n    @Input()\r\n    public isDismissable:boolean;\r\n\r\n    @Output(\"dismiss\")\r\n    public onDismiss:EventEmitter<SuiMessage>;\r\n\r\n    public isDismissed:boolean;\r\n\r\n    public transitionController:TransitionController;\r\n\r\n    @Input()\r\n    public transition:string;\r\n\r\n    @Input()\r\n    public transitionDuration:number;\r\n\r\n    @Input(\"class\")\r\n    public class:string;\r\n\r\n    constructor() {\r\n        this.isDismissable = true;\r\n        this.onDismiss = new EventEmitter<SuiMessage>();\r\n\r\n        this.isDismissed = false;\r\n\r\n        this.transitionController = new TransitionController();\r\n        this.transition = \"fade\";\r\n        this.transitionDuration = 300;\r\n\r\n        this.class = \"\";\r\n    }\r\n\r\n    public dismiss():void {\r\n        this.transitionController.animate(new Transition(this.transition, this.transitionDuration, TransitionDirection.Out, () => {\r\n            this.isDismissed = true;\r\n            this.onDismiss.emit(this);\r\n        }));\r\n    }\r\n}\r\n"]}