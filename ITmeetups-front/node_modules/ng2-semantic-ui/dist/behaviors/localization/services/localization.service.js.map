{"version":3,"file":"localization.service.js","sourceRoot":"","sources":["../../../../src/behaviors/localization/services/localization.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable, EventEmitter } from \"@angular/core\";\r\nimport { ILocaleValues, IPartialLocaleValues, RecursivePartial } from \"../interfaces/values\";\r\nimport enGB from \"../locales/en-GB\";\r\nimport * as $extend from \"extend\";\r\n\r\nfunction deepClone<T>(obj:T):T {\r\n    return JSON.parse(JSON.stringify(obj));\r\n}\r\n\r\nfunction deepExtend<T, U>(target:T, source:U):T & U {\r\n    // Rollup...\r\n    const extend = ($extend as any).default || $extend;\r\n    return extend(true, target, source);\r\n}\r\n\r\nfunction lang(language:string):string {\r\n    return language.toLowerCase().replace(\"-\", \"\");\r\n}\r\n\r\ninterface ILocalizationValuesContainer {\r\n    [name:string]:IPartialLocaleValues;\r\n}\r\n\r\n@Injectable()\r\nexport class SuiLocalizationService {\r\n    private _language:string;\r\n\r\n    private _fallbackValues:ILocaleValues;\r\n    private _values:ILocalizationValuesContainer;\r\n\r\n    public get language():string {\r\n        return this._language;\r\n    }\r\n\r\n    public onLanguageUpdate:EventEmitter<void>;\r\n\r\n    constructor() {\r\n        this.onLanguageUpdate = new EventEmitter<void>();\r\n\r\n        this._fallbackValues = enGB;\r\n        this._values = {};\r\n        this._language = \"en-GB\";\r\n        this.load(\"en-GB\", enGB);\r\n    }\r\n\r\n    public setLanguage(language:string):void {\r\n        if (lang(this._language) !== lang(language)) {\r\n            this._language = language;\r\n            this.onLanguageUpdate.emit();\r\n        }\r\n    }\r\n\r\n    public get(language:string = this.language):ILocaleValues {\r\n        const values = deepClone(this._fallbackValues);\r\n        if (!this._values[lang(language)]) {\r\n            throw new Error(`Locale ${language} is not loaded`);\r\n        }\r\n        deepExtend(values, this._values[lang(language)]);\r\n        return deepClone(values);\r\n    }\r\n\r\n    public override<T extends keyof ILocaleValues>(\r\n        values:ILocaleValues[T],\r\n        overrides:RecursivePartial<ILocaleValues[T]>\r\n    ):ILocaleValues[T] {\r\n        return deepExtend(deepClone(values), overrides);\r\n    }\r\n\r\n    public load(language:string, values:IPartialLocaleValues):void {\r\n        this._values[lang(language)] = deepClone(values);\r\n        this.onLanguageUpdate.emit();\r\n    }\r\n\r\n    public patch(language:string, values:IPartialLocaleValues):void {\r\n        deepExtend(this._values[lang(language)], values);\r\n    }\r\n\r\n    public interpolate(value:string, variables:[string, string][]):string {\r\n        return variables.reduce((s, [k, v]) => s.replace(new RegExp(`#{${k}}`, \"g\"), v), value);\r\n    }\r\n}\r\n"]}