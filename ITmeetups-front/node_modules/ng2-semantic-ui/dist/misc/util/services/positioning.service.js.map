{"version":3,"file":"positioning.service.js","sourceRoot":"","sources":["../../../../src/misc/util/services/positioning.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { ElementRef } from \"@angular/core\";\r\nimport Popper, { Modifiers, PopperOptions, Placement, Data } from \"popper.js\";\r\n\r\ntype PopperModifiers = Modifiers & {\r\n    computeStyle?:{\r\n        gpuAcceleration:boolean;\r\n    };\r\n};\r\ntype PopperInstance = Popper & {\r\n    options:PopperOptions & {\r\n        modifiers:PopperModifiers;\r\n    };\r\n};\r\n\r\nexport type PositioningPlacement = \"auto\" |\r\n                                   \"top left\" | \"top\" | \"top right\" |\r\n                                   \"bottom left\" | \"bottom\" | \"bottom right\" |\r\n                                   \"left top\" | \"left\" | \"left bottom\" |\r\n                                   \"right top\" | \"right\" | \"right bottom\";\r\n\r\nexport const PositioningPlacement = {\r\n    Auto: \"auto\" as PositioningPlacement,\r\n    TopLeft: \"top left\" as PositioningPlacement,\r\n    Top: \"top\" as PositioningPlacement,\r\n    TopRight: \"top right\" as PositioningPlacement,\r\n    LeftTop: \"left top\" as PositioningPlacement,\r\n    Left: \"left\" as PositioningPlacement,\r\n    LeftBottom: \"left bottom\" as PositioningPlacement,\r\n    BottomLeft: \"bottom left\" as PositioningPlacement,\r\n    Bottom: \"bottom\" as PositioningPlacement,\r\n    BottomRight: \"bottom right\" as PositioningPlacement,\r\n    RightTop: \"right top\" as PositioningPlacement,\r\n    Right: \"right\" as PositioningPlacement,\r\n    RightBottom: \"right bottom\" as PositioningPlacement\r\n};\r\n\r\nexport interface IPositionBoundingBox {\r\n    width:number;\r\n    height:number;\r\n    top:number;\r\n    left:number;\r\n    bottom:number;\r\n    right:number;\r\n}\r\n\r\nfunction placementToPopper(placement:PositioningPlacement):Placement {\r\n    if (!placement || placement === PositioningPlacement.Auto) {\r\n        return \"auto\";\r\n    }\r\n\r\n    // All placements of the format: `direction alignment`, e.g. `top left`.\r\n    const [direction, alignment] = placement.split(\" \");\r\n\r\n    // Direction alone covers case of just `top`, `left`, `bottom`, `right`.\r\n    const chosenPlacement = [direction];\r\n\r\n    // Add `start` / `end` to placement, depending on alignment direction.\r\n    switch (alignment) {\r\n        case \"top\":\r\n        case \"left\":\r\n            chosenPlacement.push(\"start\");\r\n            break;\r\n        case \"bottom\":\r\n        case \"right\":\r\n            chosenPlacement.push(\"end\");\r\n            break;\r\n    }\r\n\r\n    // Join with hyphen to create Popper compatible placement.\r\n    return chosenPlacement.join(\"-\") as Placement;\r\n}\r\n\r\nfunction popperToPlacement(popper:string):PositioningPlacement {\r\n    if (!popper || popper === \"auto\") {\r\n        return \"auto\";\r\n    }\r\n\r\n    const [direction, alignment] = popper.split(\"-\");\r\n\r\n    const chosenPlacement = [direction];\r\n\r\n    switch (direction) {\r\n        case \"top\":\r\n        case \"bottom\":\r\n            switch (alignment) {\r\n                case \"start\":\r\n                    chosenPlacement.push(\"left\");\r\n                    break;\r\n                case \"end\":\r\n                    chosenPlacement.push(\"right\");\r\n                    break;\r\n            }\r\n            break;\r\n        case \"left\":\r\n        case \"right\":\r\n            switch (alignment) {\r\n                case \"start\":\r\n                    chosenPlacement.push(\"top\");\r\n                    break;\r\n                case \"end\":\r\n                    chosenPlacement.push(\"bottom\");\r\n                    break;\r\n            }\r\n            break;\r\n    }\r\n\r\n    return chosenPlacement.join(\" \") as PositioningPlacement;\r\n}\r\n\r\nexport class PositioningService {\r\n    public readonly anchor:ElementRef;\r\n    public readonly subject:ElementRef;\r\n\r\n    private _popper:PopperInstance;\r\n    private _popperState:Data;\r\n    private _placement:PositioningPlacement;\r\n\r\n    public get placement():PositioningPlacement {\r\n        return this._placement;\r\n    }\r\n\r\n    public set placement(placement:PositioningPlacement) {\r\n        this._placement = placement;\r\n        this._popper.options.placement = placementToPopper(placement);\r\n        this.update();\r\n    }\r\n\r\n    public get actualPlacement():PositioningPlacement {\r\n        if (!this._popperState) {\r\n            return PositioningPlacement.Auto;\r\n        }\r\n\r\n        return popperToPlacement(this._popperState.placement);\r\n    }\r\n\r\n    public get state():Data {\r\n        return this._popperState;\r\n    }\r\n\r\n    constructor(anchor:ElementRef, subject:ElementRef, placement:PositioningPlacement, arrowSelector?:string) {\r\n        this.anchor = anchor;\r\n        this.subject = subject;\r\n        this._placement = placement;\r\n\r\n        const modifiers:PopperModifiers = {\r\n            computeStyle: {\r\n                gpuAcceleration: false\r\n            },\r\n            preventOverflow: {\r\n                escapeWithReference: true,\r\n                boundariesElement: document.body\r\n            },\r\n            arrow: {\r\n                element: arrowSelector\r\n            }\r\n        };\r\n\r\n        if (!arrowSelector) {\r\n            delete modifiers.arrow;\r\n        }\r\n\r\n        this._popper = new Popper(\r\n            anchor.nativeElement,\r\n            subject.nativeElement,\r\n            {\r\n                placement: placementToPopper(placement),\r\n                modifiers,\r\n                onCreate: initial => this._popperState = initial,\r\n                onUpdate: update => this._popperState = update\r\n            }) as PopperInstance;\r\n    }\r\n\r\n    public update():void {\r\n        this._popper.update();\r\n    }\r\n\r\n    public destroy():void {\r\n        this._popper.destroy();\r\n    }\r\n}\r\n"]}