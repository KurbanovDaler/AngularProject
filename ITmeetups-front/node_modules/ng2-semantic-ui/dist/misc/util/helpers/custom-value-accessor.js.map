{"version":3,"file":"custom-value-accessor.js","sourceRoot":"","sources":["../../../../src/misc/util/helpers/custom-value-accessor.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,iBAAiB,EAAwB,MAAM,gBAAgB,CAAC;AACzE,OAAO,EAAE,UAAU,EAAwB,MAAM,eAAe,CAAC;AAMjE,IAAA;IACI,6BAAoB,KAAO;QAAP,UAAK,GAAL,KAAK,CAAE;wBAET,eAAQ;yBACP,eAAQ;KAHI;IAKxB,wCAAU,GAAjB,UAAkB,KAAO;QACrB,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;KAChC;IAEM,8CAAgB,GAAvB,UAAwB,EAAa;QACjC,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;KACtB;IAEM,+CAAiB,GAAxB,UAAyB,EAAa;QAClC,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;KACvB;8BAvBL;IAwBC,CAAA;AAjBD,+BAiBC;AAQD,MAAM,qCAAqC,IAAa;IACpD,MAAM,CAAC;QACH,OAAO,EAAE,iBAAiB;QAC1B,WAAW,EAAE,UAAU,CAAC,cAAM,OAAA,IAAI,EAAJ,CAAI,CAAC;QACnC,KAAK,EAAE,IAAI;KACd,CAAC;CACL","sourcesContent":["import { NG_VALUE_ACCESSOR, ControlValueAccessor } from \"@angular/forms\";\r\nimport { forwardRef, InjectionToken, Type } from \"@angular/core\";\r\n\r\nexport interface ICustomValueAccessorHost<T> {\r\n    writeValue(value:T):void;\r\n}\r\n\r\nexport class CustomValueAccessor<U, T extends ICustomValueAccessorHost<U>> implements ControlValueAccessor {\r\n    constructor(private _host:T) {}\r\n\r\n    public onChange = () => {};\r\n    public onTouched = () => {};\r\n\r\n    public writeValue(value:U):void {\r\n        this._host.writeValue(value);\r\n    }\r\n\r\n    public registerOnChange(fn:() => void):void {\r\n        this.onChange = fn;\r\n    }\r\n\r\n    public registerOnTouched(fn:() => void):void {\r\n        this.onTouched = fn;\r\n    }\r\n}\r\n\r\nexport interface IValueAccessorProvider {\r\n    provide:InjectionToken<ControlValueAccessor>;\r\n    useExisting:Type<any>;\r\n    multi:boolean;\r\n}\r\n\r\nexport function customValueAccessorFactory(type:Function):IValueAccessorProvider {\r\n    return {\r\n        provide: NG_VALUE_ACCESSOR,\r\n        useExisting: forwardRef(() => type),\r\n        multi: true\r\n    };\r\n}\r\n"]}