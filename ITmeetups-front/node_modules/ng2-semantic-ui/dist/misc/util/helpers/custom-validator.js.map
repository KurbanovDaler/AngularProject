{"version":3,"file":"custom-validator.js","sourceRoot":"","sources":["../../../../src/misc/util/helpers/custom-validator.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,aAAa,EAAgD,MAAM,gBAAgB,CAAC;AAC7F,OAAO,EAAE,UAAU,EAAwB,MAAM,eAAe,CAAC;AAMjE,IAAA;IACI,yBAAoB,KAAO;QAAP,UAAK,GAAL,KAAK,CAAE;iCAEA,eAAQ;KAFJ;IAIxB,kCAAQ,GAAf,UAAgB,CAAiB;QAC7B,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;KACjC;IAEM,mDAAyB,GAAhC,UAAiC,EAAa;QAC1C,IAAI,CAAC,iBAAiB,GAAG,EAAE,CAAC;KAC/B;0BAlBL;IAmBC,CAAA;AAZD,2BAYC;AAQD,MAAM,iCAAiC,IAAa;IAChD,MAAM,CAAC;QACH,OAAO,EAAE,aAAa;QACtB,WAAW,EAAE,UAAU,CAAC,cAAM,OAAA,IAAI,EAAJ,CAAI,CAAC;QACnC,KAAK,EAAE,IAAI;KACd,CAAC;CACL","sourcesContent":["import { NG_VALIDATORS, AbstractControl, ValidationErrors, Validator } from \"@angular/forms\";\r\nimport { forwardRef, InjectionToken, Type } from \"@angular/core\";\r\n\r\nexport interface ICustomValidatorHost {\r\n    validate(c:AbstractControl):ValidationErrors | null;\r\n}\r\n\r\nexport class CustomValidator<T extends ICustomValidatorHost> implements Validator {\r\n    constructor(private _host:T) {}\r\n\r\n    public onValidatorChange = () => {};\r\n\r\n    public validate(c:AbstractControl):ValidationErrors | null {\r\n        return this._host.validate(c);\r\n    }\r\n\r\n    public registerOnValidatorChange(fn:() => void):void {\r\n        this.onValidatorChange = fn;\r\n    }\r\n}\r\n\r\nexport interface IValidationProvider {\r\n    provide:InjectionToken<(Function | Validator)[]>;\r\n    useExisting:Type<any>;\r\n    multi:boolean;\r\n}\r\n\r\nexport function customValidatorFactory(type:Function):IValidationProvider {\r\n    return {\r\n        provide: NG_VALIDATORS,\r\n        useExisting: forwardRef(() => type),\r\n        multi: true\r\n    };\r\n}\r\n"]}