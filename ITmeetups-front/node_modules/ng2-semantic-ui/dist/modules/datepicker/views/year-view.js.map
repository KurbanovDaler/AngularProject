{"version":3,"file":"year-view.js","sourceRoot":"","sources":["../../../../src/modules/datepicker/views/year-view.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,OAAO,EAAE,SAAS,EAAE,SAAS,EAAE,MAAM,eAAe,CAAC;AACrD,OAAO,EAAE,IAAI,EAAE,QAAQ,EAAE,aAAa,EAAE,MAAM,0BAA0B,CAAC;AACzE,OAAO,EAAE,YAAY,EAAE,gBAAgB,EAAE,MAAM,iBAAiB,CAAC;AAEjE,OAAO,EAAE,oBAAoB,EAAE,MAAM,oCAAoC,CAAC;AAE1E,IAAA;IAA8C,4CAAoB;;;;IACvD,gDAAa,GAApB,UAAqB,IAAiB,EAAE,QAAa;QACjD,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,QAAQ,EAAE,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC;QACrF,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,WAAW,EAAE,GAAG,EAAE,CAAC;KAChG;mCAVL;EAM8C,oBAAoB,EAKjE,CAAA;AALD,oCAKC;;IA2BwC,uCAAY;IAOjD,6BAAY,QAAkB;eAC1B,kBAAM,QAAQ,EAAE,gBAAgB,CAAC,IAAI,EAAE,IAAI,wBAAwB,CAAC,aAAa,CAAC,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;KACnG;IARD,sBAAW,4CAAW;aAAtB;YACI,MAAM,CAAC,QAAQ;iBACV,OAAO,CAAC,aAAa,CAAC,MAAM,EAAE,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;iBACvE,WAAW,EAAE,CAAC;SACtB;;;OAAA;IAMM,iCAAG,GAAV,UAAW,IAAW;QAClB,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC;KACvD;;gBAtCJ,SAAS,SAAC;oBACP,QAAQ,EAAE,wBAAwB;oBAClC,QAAQ,EAAE,woBAqBb;iBACA;;;;gBArCmB,SAAS;;8BAA7B;EAsCyC,YAAY;SAAxC,mBAAmB","sourcesContent":["import { Component, Renderer2 } from \"@angular/core\";\r\nimport { Util, DateUtil, DatePrecision } from \"../../../misc/util/index\";\r\nimport { CalendarView, CalendarViewType } from \"./calendar-view\";\r\nimport { CalendarItem } from \"../directives/calendar-item\";\r\nimport { CalendarRangeService } from \"../services/calendar-range.service\";\r\n\r\nexport class CalendarRangeYearService extends CalendarRangeService {\r\n    public configureItem(item:CalendarItem, baseDate:Date):void {\r\n        item.humanReadable = Util.String.padLeft(item.date.getFullYear().toString(), 4, \"0\");\r\n        item.isOutsideRange = item.date.getFullYear() >= this.calcStart(baseDate).getFullYear() + 10;\r\n    }\r\n}\r\n\r\n@Component({\r\n    selector: \"sui-calendar-year-view\",\r\n    template: `\r\n<table class=\"ui celled center aligned unstackable table three column year\">\r\n<thead>\r\n    <tr>\r\n        <th colspan=\"3\">\r\n            <sui-calendar-view-title [ranges]=\"ranges\" (zoomOut)=\"zoomOut()\">\r\n                {{ pad(decadeStart) }} - {{ pad(decadeStart + 10) }}\r\n            </sui-calendar-view-title>\r\n        </th>\r\n    </tr>\r\n</thead>\r\n<tbody>\r\n    <tr *ngFor=\"let group of ranges.current.groupedItems\">\r\n        <td class=\"link\"\r\n            *ngFor=\"let item of group\"\r\n            [calendarItem]=\"item\"\r\n            (click)=\"setDate(item)\">{{ item.humanReadable }}\r\n        </td>\r\n    </tr>\r\n</tbody>\r\n</table>\r\n`\r\n})\r\nexport class SuiCalendarYearView extends CalendarView {\r\n    public get decadeStart():number {\r\n        return DateUtil\r\n            .startOf(DatePrecision.Decade, DateUtil.clone(this.service.currentDate))\r\n            .getFullYear();\r\n    }\r\n\r\n    constructor(renderer:Renderer2) {\r\n        super(renderer, CalendarViewType.Year, new CalendarRangeYearService(DatePrecision.Decade, 4, 3));\r\n    }\r\n\r\n    public pad(year:number):string {\r\n        return Util.String.padLeft(year.toString(), 4, \"0\");\r\n    }\r\n}\r\n"]}