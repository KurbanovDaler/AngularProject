{"version":3,"file":"date-fns.js","sourceRoot":"","sources":["../../../../src/modules/datepicker/helpers/date-fns.ts"],"names":[],"mappings":"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","sourcesContent":["import { IDatepickerLocaleValues } from \"../../../behaviors/localization/index\";\r\nimport { format, parse } from \"date-fns\";\r\nimport * as defaultLocale from \"date-fns/locale/en-US\";\r\n\r\ninterface IDateFnsLocaleValues { [name:string]:string[]; }\r\ninterface IDateFnsHelperOptions { type?:string; }\r\ntype DateFnsHelper<U, T> = (value:U, options:IDateFnsHelperOptions) => T;\r\ntype DateFnsWeekStartsOn = 0 | 1 | 2 | 3 | 4 | 5 | 6;\r\n\r\ninterface IDateFnsCustomLocale {\r\n    localize:{\r\n        weekday:DateFnsHelper<number, string>;\r\n        weekdays:DateFnsHelper<IDateFnsHelperOptions, string[]>;\r\n        month:DateFnsHelper<number, string>;\r\n        months:DateFnsHelper<IDateFnsHelperOptions, string[]>;\r\n        timeOfDay:DateFnsHelper<number, string>;\r\n        timesOfDay:DateFnsHelper<IDateFnsHelperOptions, string[]>;\r\n    };\r\n    match:{\r\n        weekdays:DateFnsHelper<string, RegExpMatchArray | null>;\r\n        weekday?:DateFnsHelper<RegExpMatchArray, number>;\r\n        months:DateFnsHelper<string, RegExpMatchArray | null>;\r\n        month?:DateFnsHelper<RegExpMatchArray, number>;\r\n        timesOfDay:DateFnsHelper<string, RegExpMatchArray | null>;\r\n        timeOfDay?:DateFnsHelper<RegExpMatchArray, number>;\r\n    };\r\n    options?:{\r\n        weekStartsOn?:number;\r\n    };\r\n}\r\n\r\nfunction buildLocalizeFn(values:IDateFnsLocaleValues,\r\n                         defaultType:string,\r\n                         indexCallback?:(oldIndex:number) => number):DateFnsHelper<number, string> {\r\n\r\n    return (dirtyIndex:number, { type } = { type: defaultType }) => {\r\n        const index = indexCallback ? indexCallback(dirtyIndex) : dirtyIndex;\r\n        return values[type][index];\r\n    };\r\n}\r\n\r\nfunction buildLocalizeArrayFn(values:IDateFnsLocaleValues, defaultType:string):DateFnsHelper<IDateFnsHelperOptions, string[]> {\r\n    return ({ type } = { type: defaultType }) => values[type];\r\n}\r\n\r\nfunction buildMatchFn(patterns:IDateFnsLocaleValues, defaultType:string):DateFnsHelper<string, RegExpMatchArray | null> {\r\n    return (dirtyString, { type } = { type: defaultType }) =>\r\n        dirtyString.match(`^(${patterns[type].join(\"|\")})`);\r\n}\r\n\r\nfunction buildParseFn(patterns:IDateFnsLocaleValues, defaultType:string):DateFnsHelper<RegExpMatchArray, number> {\r\n    return ([, result], { type } = { type: defaultType }) =>\r\n        (patterns[type] || patterns[defaultType])\r\n            .map(p => new RegExp(`^${p}`))\r\n            .findIndex(pattern => pattern.test(result));\r\n}\r\n\r\nexport class DateFnsParser {\r\n    private _weekStartsOn:DateFnsWeekStartsOn;\r\n    private _locale:IDateFnsCustomLocale;\r\n\r\n    private get _config():any {\r\n        return {\r\n            weekStartsOn: this._weekStartsOn,\r\n            locale: this._locale\r\n        };\r\n    }\r\n\r\n    constructor(locale:IDatepickerLocaleValues) {\r\n        this._weekStartsOn = locale.firstDayOfWeek as DateFnsWeekStartsOn;\r\n\r\n        const weekdayValues = {\r\n            long: locale.weekdays,\r\n            short: locale.weekdaysShort,\r\n            narrow: locale.weekdaysNarrow\r\n        };\r\n\r\n        const monthValues = {\r\n            long: locale.months,\r\n            short: locale.monthsShort\r\n        };\r\n\r\n        const timeOfDayValues = {\r\n            long: locale.timesOfDay,\r\n            uppercase: locale.timesOfDayUppercase,\r\n            lowercase: locale.timesOfDayLowercase\r\n        };\r\n\r\n        const timeOfDayMatchValues = {\r\n            long: locale.timesOfDay,\r\n            short: locale.timesOfDayUppercase.concat(locale.timesOfDayLowercase)\r\n        };\r\n\r\n        this._locale = defaultLocale as any;\r\n        this._locale.localize = {\r\n            ...this._locale.localize,\r\n            ...{\r\n                weekday: buildLocalizeFn(weekdayValues, \"long\"),\r\n                weekdays: buildLocalizeArrayFn(weekdayValues, \"long\"),\r\n                month: buildLocalizeFn(monthValues, \"long\"),\r\n                months: buildLocalizeArrayFn(monthValues, \"long\"),\r\n                timeOfDay: buildLocalizeFn(timeOfDayValues, \"long\", (hours:number) => {\r\n                    return hours / 12 >= 1 ? 1 : 0;\r\n                }),\r\n                timesOfDay: buildLocalizeArrayFn(timeOfDayValues, \"long\")\r\n            }\r\n        };\r\n        this._locale.match = {\r\n            ...this._locale.match,\r\n            ...{\r\n                weekdays: buildMatchFn(weekdayValues, \"long\"),\r\n                weekday: buildParseFn(weekdayValues, \"long\"),\r\n                months: buildMatchFn(monthValues, \"long\"),\r\n                month: buildParseFn(monthValues, \"long\"),\r\n                timesOfDay:buildMatchFn(timeOfDayMatchValues, \"long\"),\r\n                timeOfDay:buildParseFn(timeOfDayMatchValues, \"long\")\r\n            }\r\n        };\r\n    }\r\n\r\n    public format(d:Date, f:string):string {\r\n        return format(d, f, this._config);\r\n    }\r\n\r\n    public parse(dS:string, f:string, bD:Date):Date {\r\n        return parse(dS, f, bD, this._config);\r\n    }\r\n}\r\n"]}