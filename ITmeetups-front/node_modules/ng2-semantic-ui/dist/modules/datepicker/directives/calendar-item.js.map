{"version":3,"file":"calendar-item.js","sourceRoot":"","sources":["../../../../src/modules/datepicker/directives/calendar-item.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,SAAS,EAAE,WAAW,EAAE,YAAY,EAAE,KAAK,EAAE,YAAY,EAAE,iBAAiB,EAAE,MAAM,eAAe,CAAC;AAE7G,IAAA;IASI,sBAAY,IAAS;QACjB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;KACpB;uBAdL;IAeC,CAAA;AAZD,wBAYC;;IA6BG,yBAAmB,cAAgC;QAAhC,mBAAc,GAAd,cAAc,CAAkB;QAC/C,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QAEtB,IAAI,CAAC,UAAU,GAAG,IAAI,YAAY,EAAW,CAAC;KACjD;0BAvBU,yCAAY;;YACnB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC;;;;;0BAIvB,qCAAQ;;YACf,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC;;;;;0BAInB,oCAAO;;YACd,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC;;;;;IAetB,qCAAW;QACd,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;YACjB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;YACrB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;SACvC;;IAIE,sCAAY;QACf,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACtB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;;;gBA5C3C,SAAS,SAAC;oBACP,QAAQ,EAAE,gBAAgB;iBAC7B;;;;gBAlBmE,iBAAiB;;;yBAoBhF,KAAK,SAAC,cAAc;iCAGpB,WAAW,SAAC,gBAAgB;6BAK5B,WAAW,SAAC,cAAc;4BAK1B,WAAW,SAAC,aAAa;6BAKzB,WAAW,SAAC,aAAa;gCAWzB,YAAY,SAAC,WAAW;iCAQxB,YAAY,SAAC,YAAY;;0BA1D9B;;SAoBa,eAAe","sourcesContent":["\r\nimport { Directive, HostBinding, HostListener, Input, EventEmitter, ChangeDetectorRef } from \"@angular/core\";\r\n\r\nexport class CalendarItem {\r\n    public date:Date;\r\n    public humanReadable:string;\r\n    public isDisabled:boolean;\r\n    public isActive:boolean;\r\n    public isOutsideRange:boolean;\r\n    public isToday:boolean;\r\n    public isSelectable:boolean;\r\n\r\n    constructor(date:Date) {\r\n        this.date = date;\r\n    }\r\n}\r\n\r\n@Directive({\r\n    selector: \"[calendarItem]\"\r\n})\r\nexport class SuiCalendarItem {\r\n    @Input(\"calendarItem\")\r\n    public item:CalendarItem;\r\n\r\n    @HostBinding(\"class.disabled\")\r\n    public get isSelectable():boolean {\r\n        return this.item.isSelectable;\r\n    }\r\n\r\n    @HostBinding(\"class.active\")\r\n    public get isActive():boolean {\r\n        return this.item.isActive;\r\n    }\r\n\r\n    @HostBinding(\"class.today\")\r\n    public get isToday():boolean {\r\n        return this.item.isToday;\r\n    }\r\n\r\n    @HostBinding(\"class.focus\")\r\n    public hasFocus:boolean;\r\n\r\n    public onFocussed:EventEmitter<boolean>;\r\n\r\n    constructor(public changeDetector:ChangeDetectorRef) {\r\n        this.hasFocus = false;\r\n\r\n        this.onFocussed = new EventEmitter<boolean>();\r\n    }\r\n\r\n    @HostListener(\"mousemove\")\r\n    public onMouseMove():void {\r\n        if (!this.hasFocus) {\r\n            this.hasFocus = true;\r\n            this.onFocussed.emit(this.hasFocus);\r\n        }\r\n    }\r\n\r\n    @HostListener(\"mouseleave\")\r\n    public onMouseLeave():void {\r\n        this.hasFocus = false;\r\n        this.onFocussed.emit(this.hasFocus);\r\n    }\r\n}\r\n"]}