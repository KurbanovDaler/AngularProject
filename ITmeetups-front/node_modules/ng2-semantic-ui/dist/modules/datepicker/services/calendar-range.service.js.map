{"version":3,"file":"calendar-range.service.js","sourceRoot":"","sources":["../../../../src/modules/datepicker/services/calendar-range.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { DatePrecision, DateUtil, Util } from \"../../../misc/util/index\";\r\nimport { CalendarItem } from \"../directives/calendar-item\";\r\nimport { CalendarService } from \"./calendar.service\";\r\nimport { DateComparer } from \"../classes/date-comparer\";\r\n\r\nexport class CalendarRange {\r\n    public start:Date;\r\n    public dates:Date[];\r\n    public items:CalendarItem[];\r\n    public get inRange():CalendarItem[] {\r\n        return this.items.filter(i => !i.isOutsideRange);\r\n    }\r\n    public groupedItems:CalendarItem[][];\r\n    private _comparer:DateComparer;\r\n\r\n    constructor(start:Date, dates:Date[], items:CalendarItem[], grouped:CalendarItem[][], comparer:DateComparer) {\r\n        this.start = start;\r\n        this.dates = dates;\r\n        this.items = items;\r\n        this.groupedItems = grouped;\r\n        this._comparer = comparer;\r\n    }\r\n\r\n    public find(item:CalendarItem):CalendarItem | undefined {\r\n        return this.items.find(i => this._comparer.equal(i.date, item.date));\r\n    }\r\n\r\n    public findIndex(item:CalendarItem | undefined):number {\r\n        if (!item) {\r\n            return -1;\r\n        }\r\n        return this.items.findIndex(i => this._comparer.equal(i.date, item.date));\r\n    }\r\n\r\n    public containsDate(date:Date):boolean {\r\n        return !!this.inRange.find(i => this._comparer.equal(i.date, date));\r\n    }\r\n}\r\n\r\nexport abstract class CalendarRangeService {\r\n    public previous:CalendarRange;\r\n    public current:CalendarRange;\r\n    public next:CalendarRange;\r\n\r\n    public service:CalendarService;\r\n\r\n    public interval:DatePrecision;\r\n    public marginal:DatePrecision;\r\n    public rows:number;\r\n    public columns:number;\r\n\r\n    public get dateComparer():DateComparer {\r\n        return new DateComparer(this.marginal, this.service.inFinalView);\r\n    }\r\n\r\n    public get length():number {\r\n        return this.rows * this.columns;\r\n    }\r\n\r\n    public get canMoveNext():boolean {\r\n        const firstItem = this.next.inRange[0];\r\n        if (firstItem && this.service.maxDate) {\r\n            return firstItem.date <= this.service.maxDate;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    public get canMovePrevious():boolean {\r\n        const lastItem = this.previous.inRange.slice(-1).pop();\r\n        if (lastItem && this.service.minDate) {\r\n            return lastItem.date >= this.service.minDate;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    constructor(interval:DatePrecision, rows:number, columns:number) {\r\n        this.interval = interval;\r\n        this.marginal = interval as number + 1;\r\n        this.rows = rows;\r\n        this.columns = columns;\r\n    }\r\n\r\n    public loadService(service:CalendarService):void {\r\n        this.service = service;\r\n\r\n        this.refresh();\r\n    }\r\n\r\n    public refresh():void {\r\n        this.current = this.calcRange(this.service.currentDate);\r\n\r\n        this.next = this.calcRange(DateUtil.next(this.interval, DateUtil.clone(this.service.currentDate)));\r\n        this.previous = this.calcRange(DateUtil.previous(this.interval, DateUtil.clone(this.service.currentDate)));\r\n    }\r\n\r\n    public move(forwards:boolean):void {\r\n        if (forwards) {\r\n            return this.moveNext();\r\n        }\r\n        return this.movePrevious();\r\n    }\r\n\r\n    public moveNext():void {\r\n        DateUtil.next(this.interval, this.service.currentDate);\r\n        this.previous = this.current;\r\n        this.current = this.next;\r\n        this.next = this.calcRange(DateUtil.next(this.interval, DateUtil.clone(this.service.currentDate)));\r\n    }\r\n\r\n    public movePrevious():void {\r\n        DateUtil.previous(this.interval, this.service.currentDate);\r\n        this.next = this.current;\r\n        this.current = this.previous;\r\n        this.previous = this.calcRange(DateUtil.previous(this.interval, DateUtil.clone(this.service.currentDate)));\r\n    }\r\n\r\n    public calc(forwards:boolean):CalendarRange {\r\n        if (forwards) {\r\n            return this.next;\r\n        }\r\n        return this.previous;\r\n    }\r\n\r\n    private calcRange(startDate:Date):CalendarRange {\r\n        const start = this.calcStart(startDate);\r\n        if (this.service.inFinalView) {\r\n            DateUtil.startOf(this.marginal, start, true);\r\n        }\r\n        const dates = this.calcDates(start);\r\n        const items = this.calcItems(dates, startDate);\r\n\r\n        return new CalendarRange(start, dates, items, Util.Array.group(items, this.columns), this.dateComparer);\r\n    }\r\n\r\n    protected calcStart(date:Date):Date {\r\n        return DateUtil.startOf(this.interval, DateUtil.clone(date));\r\n    }\r\n\r\n    protected calcDates(rangeStart:Date):Date[] {\r\n        return Util.Array\r\n            .range(this.length)\r\n            .map(i => DateUtil.add(this.marginal, DateUtil.clone(rangeStart), i));\r\n\r\n    }\r\n\r\n    protected calcItems(dateRange:Date[], baseDate:Date):CalendarItem[] {\r\n        return dateRange.map(date => {\r\n            const item = new CalendarItem(date);\r\n\r\n            item.isDisabled = !this.dateComparer.between(item.date, this.service.minDate, this.service.maxDate);\r\n            item.isActive = this.dateComparer.equal(item.date, this.service.selectedDate);\r\n            item.isToday = this.dateComparer.equal(item.date, new Date());\r\n            item.isSelectable = item.isDisabled;\r\n\r\n            this.configureItem(item, baseDate);\r\n\r\n            return item;\r\n        });\r\n    }\r\n\r\n    protected abstract configureItem(item:CalendarItem, baseDate:Date):void;\r\n}\r\n"]}