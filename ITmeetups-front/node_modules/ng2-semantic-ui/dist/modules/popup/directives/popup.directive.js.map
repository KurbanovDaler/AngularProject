{"version":3,"file":"popup.directive.js","sourceRoot":"","sources":["../../../../src/modules/popup/directives/popup.directive.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,OAAO,EAAE,SAAS,EAAE,KAAK,EAAE,UAAU,EAAE,WAAW,EAAE,SAAS,EAAE,MAAM,eAAe,CAAC;AACrF,OAAO,EAAuB,IAAI,EAAE,oBAAoB,EAAE,mBAAmB,EAAE,MAAM,0BAA0B,CAAC;AAEhH,OAAO,EAAE,WAAW,EAAE,YAAY,EAAE,MAAM,yBAAyB,CAAC;AACpE,OAAO,EAAE,cAAc,EAAE,MAAM,2BAA2B,CAAC;AAE3D,OAAO,EAAE,0BAA0B,EAA+C,MAAM,sCAAsC,CAAC;AAE/H,IAAM,WAAW,GAAG,WAAW,CAAC;;IAMU,qCAA6B;IAiEnE,2BAAY,QAAkB,EAClB,OAAkB,EAClB,gBAAoC,EACpC,aAA4B;eAEpC,kBAAM,QAAQ,EAAE,OAAO,EAAE,gBAAgB,EAAE,IAAI,WAAW,CAAC,aAAa,CAAC,CAAC;KAC7E;0BArEU,0CAAW;uBAAC,MAAa;YAChC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,MAAM,GAAG,MAAM,CAAC;;;;;0BAI3B,wCAAS;uBAAC,IAAW;YAC5B,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC;;;;;0BAIvB,4CAAa;uBAAC,QAAgB;YACrC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,UAAU,GAAG,IAAI,CAAC,GAAG,CAAC,qBAAqB,CAAC,QAAQ,CAAC,CAAC;;;;;0BAIjE,yCAAU;uBAAC,KAAa;YAC/B,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,qBAAqB,CAAC,KAAK,CAAC,CAAC;;;;;0BAI3D,8CAAe;uBAAC,UAAiB;YACxC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,UAAU,GAAG,UAAU,CAAC;;;;;0BAInC,sDAAuB;uBAAC,QAAe;YAC9C,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,kBAAkB,GAAG,QAAQ,CAAC;;;;;0BAIzC,6CAAc;uBAAC,SAA8B;YACpD,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,GAAG,SAAS,CAAC;;;;;0BAIjC,yCAAU;uBAAC,KAAY;YAC9B,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,GAAG,KAAK,CAAC;;;;;0BAIzB,2CAAY;;YACnB,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC;;aAGrC,UAAwB,OAAoB;YACxC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,OAAO,GAAG,OAAO,CAAC;SACvC;;;;0BAGU,4CAAa;uBAAC,QAA0D;YAC/E,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;;;;;0BAIlB,mDAAoB;uBAAC,OAAqB;YACjD,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;;;;;0BAIhB,0CAAW;uBAAC,MAA0C;YAC7D,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;;;;;;gBAlE9B,SAAS,SAAC;oBACP,QAAQ,EAAE,YAAY;oBACtB,QAAQ,EAAE,UAAU;iBACvB;;;;gBAbmD,SAAS;gBAAlC,UAAU;gBACqB,mBAAmB;gBAGpE,cAAc;;;gCAWlB,KAAK;8BAKL,KAAK;kCAKL,KAAK;+BAKL,KAAK;oCAKL,KAAK;4CAKL,KAAK;mCAKL,KAAK;+BAKL,KAAK;iCAKL,KAAK;kCASL,KAAK;yCAKL,KAAK;gCAKL,KAAK;;4BA1EV;EAc0C,0BAA0B;SAAvD,iBAAiB","sourcesContent":["import { Directive, Input, ElementRef, TemplateRef, Renderer2 } from \"@angular/core\";\r\nimport { ITemplateRefContext, Util, PositioningPlacement, SuiComponentFactory } from \"../../../misc/util/index\";\r\nimport { SuiPopup } from \"../components/popup\";\r\nimport { PopupConfig, PopupTrigger } from \"../classes/popup-config\";\r\nimport { SuiPopupConfig } from \"../services/popup.service\";\r\nimport { SuiPopupController } from \"../classes/popup-controller\";\r\nimport { SuiPopupTemplateController, ITemplatePopupContext, ITemplatePopupConfig } from \"../classes/popup-template-controller\";\r\n\r\nconst templateRef = TemplateRef;\r\n\r\n@Directive({\r\n    selector: \"[suiPopup]\",\r\n    exportAs: \"suiPopup\"\r\n})\r\nexport class SuiPopupDirective<T> extends SuiPopupTemplateController<T> {\r\n    @Input()\r\n    public set popupHeader(header:string) {\r\n        this.popup.config.header = header;\r\n    }\r\n\r\n    @Input()\r\n    public set popupText(text:string) {\r\n        this.popup.config.text = text;\r\n    }\r\n\r\n    @Input()\r\n    public set popupInverted(inverted:boolean) {\r\n        this.popup.config.isInverted = Util.DOM.parseBooleanAttribute(inverted);\r\n    }\r\n\r\n    @Input()\r\n    public set popupBasic(basic:boolean) {\r\n        this.popup.config.isBasic = Util.DOM.parseBooleanAttribute(basic);\r\n    }\r\n\r\n    @Input()\r\n    public set popupTransition(transition:string) {\r\n        this.popup.config.transition = transition;\r\n    }\r\n\r\n    @Input()\r\n    public set popupTransitionDuration(duration:number) {\r\n        this.popup.config.transitionDuration = duration;\r\n    }\r\n\r\n    @Input()\r\n    public set popupPlacement(placement:PositioningPlacement) {\r\n        this.popup.config.placement = placement;\r\n    }\r\n\r\n    @Input()\r\n    public set popupDelay(delay:number) {\r\n        this.popup.config.delay = delay;\r\n    }\r\n\r\n    @Input()\r\n    public get popupTrigger():PopupTrigger {\r\n        return this.popup.config.trigger;\r\n    }\r\n\r\n    public set popupTrigger(trigger:PopupTrigger) {\r\n        this.popup.config.trigger = trigger;\r\n    }\r\n\r\n    @Input()\r\n    public set popupTemplate(template:TemplateRef<ITemplatePopupContext<T>> | undefined) {\r\n        this.template = template;\r\n    }\r\n\r\n    @Input()\r\n    public set popupTemplateContext(context:T | undefined) {\r\n        this.context = context;\r\n    }\r\n\r\n    @Input()\r\n    public set popupConfig(config:ITemplatePopupConfig<T> | undefined) {\r\n        this.configure(config);\r\n    }\r\n\r\n    constructor(renderer:Renderer2,\r\n                element:ElementRef,\r\n                componentFactory:SuiComponentFactory,\r\n                popupDefaults:SuiPopupConfig) {\r\n\r\n        super(renderer, element, componentFactory, new PopupConfig(popupDefaults));\r\n    }\r\n}\r\n"]}