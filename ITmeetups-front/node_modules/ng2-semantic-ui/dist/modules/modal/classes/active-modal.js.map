{"version":3,"file":"active-modal.js","sourceRoot":"","sources":["../../../../src/modules/modal/classes/active-modal.ts"],"names":[],"mappings":";AAKA;;AAAA;IASI,qBAAY,QAA6B,EAAE,YAAyC;QAApF,iBAMC;QALG,IAAI,CAAC,OAAO,GAAG,QAAQ,CAAC;QACxB,IAAI,CAAC,aAAa,GAAG,YAAY,CAAC;;QAGlC,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,SAAS,CAAC,cAAM,OAAA,KAAI,CAAC,aAAa,CAAC,OAAO,EAAE,EAA5B,CAA4B,CAAC,CAAC;KAC1E;IAVD,sBAAW,kCAAS;QADpB,0DAA0D;;;QAC1D;YACI,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC;SACtC;;;OAAA;IAUD,sDAAsD;;IAC/C,+BAAS;;IAAhB,UAAiB,QAA2B;QACxC,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,SAAS,CAAC,UAAC,GAAK,IAAK,OAAA,QAAQ,CAAC,GAAG,CAAC,EAAb,CAAa,CAAC,CAAC;QAC7D,MAAM,CAAC,IAAI,CAAC;KACf;IAED,mDAAmD;;IAC5C,4BAAM;;IAAb,UAAc,QAA2B;QACrC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,SAAS,CAAC,UAAC,GAAK,IAAK,OAAA,QAAQ,CAAC,GAAG,CAAC,EAAb,CAAa,CAAC,CAAC;QAC1D,MAAM,CAAC,IAAI,CAAC;KACf;IAED,iDAAiD;;IAC1C,6BAAO;;IAAd,UAAe,MAAQ;QACnB,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;KAClC;IAED,8CAA8C;;IACvC,0BAAI;;IAAX,UAAY,MAAQ;QAChB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;KAC/B;IAED,mFAAmF;;IAC5E,6BAAO;;IAAd;QACI,IAAI,CAAC,aAAa,CAAC,OAAO,EAAE,CAAC;KAChC;sBA/CL;IAgDC,CAAA;;AA3CD,uBA2CC","sourcesContent":["import { ComponentRef } from \"@angular/core\";\r\nimport { ModalConfig } from \"./modal-config\";\r\nimport { SuiModal } from \"../components/modal\";\r\n\r\n// Helper class to support method chaining when calling `SuiModalService.open(...)`.\r\nexport class ActiveModal<T, U, V> {\r\n    private _config:ModalConfig<T, U, V>;\r\n    private _componentRef:ComponentRef<SuiModal<U, V>>;\r\n\r\n    // Shorthand for direct access to the `SuiModal` instance.\r\n    public get component():SuiModal<U, V> {\r\n        return this._componentRef.instance;\r\n    }\r\n\r\n    constructor(instance:ModalConfig<T, U, V>, componentRef:ComponentRef<SuiModal<U, V>>) {\r\n        this._config = instance;\r\n        this._componentRef = componentRef;\r\n\r\n        // Automatically destroy the modal component when it has been dismissed.\r\n        this.component.onDismiss.subscribe(() => this._componentRef.destroy());\r\n    }\r\n\r\n    // Registers a callback for when `onApprove` is fired.\r\n    public onApprove(callback:(result:U) => void):ActiveModal<T, U, V> {\r\n        this.component.onApprove.subscribe((res:U) => callback(res));\r\n        return this;\r\n    }\r\n\r\n    // Registers a callback for when `onDeny` is fired.\r\n    public onDeny(callback:(result:V) => void):ActiveModal<T, U, V> {\r\n        this.component.onDeny.subscribe((res:V) => callback(res));\r\n        return this;\r\n    }\r\n\r\n    // Fires the approve event of the modal manually.\r\n    public approve(result:U):void {\r\n        this.component.approve(result);\r\n    }\r\n\r\n    // Fires the deny event of the modal manually.\r\n    public deny(result:V):void {\r\n        this.component.deny(result);\r\n    }\r\n\r\n    // Removes the modal component instantly, without transitions or firing any events.\r\n    public destroy():void {\r\n        this._componentRef.destroy();\r\n    }\r\n}\r\n"]}