[{"__symbolic":"module","version":4,"metadata":{"SuiMultiSelect":{"__symbolic":"class","extends":{"__symbolic":"reference","module":"../classes/select-base","name":"SuiSelectBase","line":59,"character":42},"arity":2,"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":6,"character":1},"arguments":[{"selector":"sui-multi-select","template":"\n<!-- Dropdown icon -->\n<i class=\"{{ icon }} icon\" (click)=\"onCaretClick($event)\"></i>\n\n<ng-container *ngIf=\"hasLabels\">\n<!-- Multi-select labels -->\n    <sui-multi-select-label *ngFor=\"let selected of selectedOptions;\"\n                            [value]=\"selected\"\n                            [query]=\"query\"\n                            [formatter]=\"configuredFormatter\"\n                            [template]=\"optionTemplate\"\n                            (deselected)=\"deselectOption($event)\"></sui-multi-select-label>\n</ng-container>\n\n<!-- Query input -->\n<input suiSelectSearch\n       type=\"text\"\n       [hidden]=\"!isSearchable || isSearchExternal\">\n\n<!-- Helper text -->\n<div class=\"text\"\n     [class.default]=\"hasLabels\"\n     [class.filtered]=\"!!query && !isSearchExternal\">\n    \n    <!-- Placeholder text -->\n    <ng-container *ngIf=\"hasLabels; else selectedBlock\">{{ placeholder }}</ng-container>\n    \n    <!-- Summary shown when labels are hidden -->\n    <ng-template #selectedBlock> {{ selectedMessage }}</ng-template>\n</div>\n\n<!-- Select dropdown menu -->\n<div class=\"menu\"\n     suiDropdownMenu\n     [menuTransition]=\"transition\"\n     [menuTransitionDuration]=\"transitionDuration\"\n     [menuAutoSelectFirst]=\"true\">\n\n    <ng-content></ng-content>\n    <ng-container *ngIf=\"availableOptions.length == 0 \">\n        <div *ngIf=\"!maxSelectedReached\" class=\"message\">{{ localeValues.noResultsMessage }}</div>\n        <div *ngIf=\"maxSelectedReached\" class=\"message\">{{ maxSelectedMessage }}</div>\n    </ng-container>\n</div>\n","styles":["\n:host input.search {\n    width: 12em !important;\n}\n"]}]}],"members":{"selectedOptionsChange":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":64,"character":5}}]}],"hasLabels":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":90,"character":5}}]}],"placeholder":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":101,"character":5}}]}],"maxSelected":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":110,"character":5}}]}],"_multiSelectClasses":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"HostBinding","line":133,"character":5},"arguments":["class.multiple"]}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/core","name":"ElementRef","line":136,"character":24},{"__symbolic":"reference","module":"@angular/core","name":"Renderer2","line":136,"character":45},{"__symbolic":"reference","module":"../../../behaviors/localization/index","name":"SuiLocalizationService","line":136,"character":76}]}],"optionsUpdateHook":[{"__symbolic":"method"}],"initialiseRenderedOption":[{"__symbolic":"method"}],"selectOption":[{"__symbolic":"method"}],"writeValue":[{"__symbolic":"method"}],"deselectOption":[{"__symbolic":"method"}],"onQueryInputKeydown":[{"__symbolic":"method"}]}},"SuiMultiSelectValueAccessor":{"__symbolic":"class","extends":{"__symbolic":"reference","module":"../../../misc/util/index","name":"CustomValueAccessor","line":248,"character":55},"arity":2,"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Directive","line":240,"character":1},"arguments":[{"selector":"sui-multi-select","host":{"(selectedOptionsChange)":"onChange($event)","(touched)":"onTouched()","$quoted$":["(selectedOptionsChange)","(touched)"]},"providers":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"../../../misc/util/index","name":"customValueAccessorFactory","line":246,"character":16},"arguments":[{"__symbolic":"reference","name":"SuiMultiSelectValueAccessor"}]}]}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"SuiMultiSelect","arguments":[{"__symbolic":"error","message":"Could not resolve type","line":249,"character":36,"context":{"typeName":"T"}},{"__symbolic":"error","message":"Could not resolve type","line":249,"character":39,"context":{"typeName":"U"}}]}]}]}}}}]